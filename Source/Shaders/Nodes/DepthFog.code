PFLOAT4 DepthFog(HLSL(uniform) GLSL(highp) sampler2D t, HALF4 st, PFLOAT4 f, PFLOAT4X4 pr, PFLOAT4 eyeVertex GLOBALS) {

	FLOAT fbDepth = texture2DProj(t, st).r;
	
	if (gl_FragCoord.z >= fbDepth) {
		discard;
	}	

	const PFLOAT LOG2 = 1.442695;
	const PFLOAT kDensity = 0.01;
	PFLOAT fogDensity = kDensity * HALF(f.a);
	fogDensity = -fogDensity * fogDensity * LOG2;
	PFLOAT zShift = pr[2][2];
	zShift = 1.0 - zShift;
	PFLOAT zScale = pr[3][2];

	// z depth is encoded in 0.0->1.0, expand to clipspace (-1, 1) and
	// push through the inverse of the 3rd row of the projection matrix
	// to get eyespace Z.

	PFLOAT l_fbZ = (fbDepth * -2.0);
	PFLOAT f_fbZ = zScale / (l_fbZ + zShift);
	
	PFLOAT zDepth = f_fbZ - eyeVertex.z;
	PFLOAT fog = exp2(fogDensity * zDepth * zDepth);
	PFLOAT a = 1.0 - clamp(fog, 0.0, 1.0);

	return PFLOAT4(f.rgb, a);
}